---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: clustertemplateinstances.clustertemplate.rawagner.com
spec:
  group: clustertemplate.rawagner.com
  names:
    kind: ClusterTemplateInstance
    listKind: ClusterTemplateInstanceList
    plural: clustertemplateinstances
    singular: clustertemplateinstance
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterTemplateInstance is the Schema for the clustertemplateinstance
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterTemplateInstanceSpec defines the desired state of
              ClusterTemplateInstance
            properties:
              template:
                description: Foo is an example field of ClusterTemplateInstance. Edit
                  clustertemplateinstance_types.go to remove/update
                type: string
              values:
                type: object
                x-kubernetes-preserve-unknown-fields: true
            required:
            - template
            - values
            type: object
          status:
            properties:
              apiServerURL:
                type: string
              clusterSetup:
                items:
                  properties:
                    completionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    name:
                      type: string
                    reason:
                      type: string
                    succeeded:
                      type: string
                  required:
                  - message
                  - name
                  - reason
                  - succeeded
                  type: object
                type: array
              clusterSetupStarted:
                type: boolean
              clusterStatus:
                type: string
              created:
                type: boolean
              kubeadminPassword:
                type: string
            required:
            - apiServerURL
            - clusterSetupStarted
            - clusterStatus
            - created
            - kubeadminPassword
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
